@page "/"
@layout EmptyLayout
@inject NavigationManager NavManager

@using Models
@using System.Windows
@using Microsoft.AspNetCore.SignalR.Client;


<div class="login-form">
    <EditForm Model="@formModel" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <legend class="login-text">Login</legend>
        <div class="field-section">
            <label>Username:</label><InputText class="input-field username-box" @bind-Value="formModel.Username" />
        </div>
    
        <div class="field-section">
            <label>Password:</label><InputText class="input-field password-box" type="password" @bind-Value="formModel.Password" />
        </div>
    

        <button class="submit" type="submit" style="margin-right:10px; display:inline;">Login</button>
        <button class="submit" @onclick="GoToRegister" style="margin-right:10px; display:inline;">Register</button>

    </EditForm>
    
</div>

@code{
    private IDataService<UserData> dbService = new GenericDataService<UserData>(new UserDataContextFactory());
    private LoginModel formModel = new();
    private Socket _connection = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);

    protected override async Task OnInitializedAsync()
    {
        while (!_connection.Connected)
        {
            try
            {
                _connection.Connect(IPAddress.Loopback, 7313);
            }
            catch
            {
                // pass
            }
        }
    }

    private async Task HandleSubmit()
    {
        var foundUser = dbService.Get(formModel.Username);
        // If the username doesn't exist, return.
        if (foundUser == null || foundUser.Result == null)
        {
            MessageBox.Show("Incorrect username or password", "Error", MessageBoxButton.OK);
            formModel = new();

            return;
        }
        else
        {
            // The username exists, check the password.
            UserData res = foundUser.Result;
            if (res.Password == formModel.Password)
            {
                (App.Current as App).UserName = res.UserName;
                MainWindow mainWindow = Application.Current.Windows.OfType<MainWindow>().FirstOrDefault();
                if (_connection.Connected){
                    byte[] buf = Encoding.ASCII.GetBytes("AddSignedUser-" + res.UserName);
                    _connection.Send(buf);
                }
                if (mainWindow != null)
                {
                    await mainWindow.getActiveProcessesAsync();
                }
                // if the password is correct go to the home page.
                NavManager.NavigateTo("/home");
            }
            else
            {
                MessageBox.Show("Incorrect username or password", "Error", MessageBoxButton.OK);
                formModel = new();

            }
        }

    }

    private void GoToRegister()
    {
        NavManager.NavigateTo("/registerPage");
    }

    private Task<UserData> GetUserData(string username)
    {
        UserData potentialUser = null;
        return null;
    }
}