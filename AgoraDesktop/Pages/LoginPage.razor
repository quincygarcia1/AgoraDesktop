@page "/"
@layout EmptyLayout
@inject NavigationManager NavManager

@using Models
@using System.Windows
@using Microsoft.AspNetCore.SignalR.Client;


<div class="login-form">
    <EditForm Model="@formModel" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <legend class="login-text">Login</legend>
        <div class="field-section">
            <label>Username:</label><InputText class="input-field username-box" @bind-Value="formModel.Username" />
        </div>
    
        <div class="field-section">
            <label>Password:</label><InputText class="input-field password-box" type="password" @bind-Value="formModel.Password" />
        </div>
    

        <button class="submit" type="submit" style="margin-right:10px; display:inline;">Login</button>
        <button class="submit" @onclick="GoToRegister" style="margin-right:10px; display:inline;">Register</button>

    </EditForm>
    
</div>

@code{
    private IDataService<UserData> dbService = new GenericDataService<UserData>(new UserDataContextFactory());
    private LoginModel formModel = new();
    private HubConnection? connection;

    protected override async Task OnInitializedAsync()
    {
        // Set up the local connection to the hub with automatic reconnecting.
        connection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7142/userhub")
            .WithAutomaticReconnect()
            .Build();
        await connection.StartAsync();
    }

    private async Task HandleSubmit()
    {


        var foundUser = dbService.Get(formModel.Username);
        // If the username doesn't exist, return.
        if (foundUser == null || foundUser.Result == null)
        {
            MessageBox.Show("Incorrect username or password", "Error", MessageBoxButton.OK);
            formModel = new();

            return;
        }
        else
        {
            // the username exists, check the password.
            UserData res = foundUser.Result;
            if (res.Password == formModel.Password)
            {
                (App.Current as App).UserName = res.UserName;
                MainWindow mainWindow = Application.Current.Windows.OfType<MainWindow>().FirstOrDefault();
                if (connection != null)
                {
                    await connection.SendAsync("addSignedUser", res.UserName);
                }
                if (mainWindow != null)
                {
                    await mainWindow.getActiveProcessesAsync();
                }
                // if the password is correct go to the home page.
                NavManager.NavigateTo("/test");
            }
            else
            {
                MessageBox.Show("Incorrect username or password", "Error", MessageBoxButton.OK);
                formModel = new();
            }
        }
        
    }

    private void GoToRegister()
    {
        NavManager.NavigateTo("/registerPage");
    }
}